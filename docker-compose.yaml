version: '3'

networks:
  ticketz:
  nginx-proxy:
  wordpress:

volumes:
  ngx_conf:
  ngx_vhost:
  ngx_html:
  ngx_dhparam:
  ngx_certs:
  ngx_acme:
  redis_data:
  postgres_data:
  backend_public:
  backend_private:
  wordpress_html:
  mysql_db:
    
services:

  nginx-proxy:
    image: nginxproxy/nginx-proxy
    container_name: ticketz-nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ngx_conf:/etc/nginx/conf.d
      - ngx_vhost:/etc/nginx/vhost.d
      - ngx_html:/usr/share/nginx/html
      - ngx_dhparam:/etc/nginx/dhparam
      - ngx_certs:/etc/nginx/certs:ro
      - ./confs/nginx-ticketz.conf:/etc/nginx/conf.d/ticketz.conf
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - nginx-proxy

  acme-companion:
    image: nginxproxy/acme-companion
    container_name: ticketz-acme-companion
    restart: always
    depends_on:
      - nginx-proxy
    volumes:
      - ngx_vhost:/etc/nginx/vhost.d
      - ngx_html:/usr/share/nginx/html
      - ngx_dhparam:/etc/nginx/dhparam:ro
      - ngx_certs:/etc/nginx/certs
      - ngx_acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - NGINX_PROXY_CONTAINER=ticketz-nginx-proxy
    networks:
      - nginx-proxy

  backend:
    image: ghcr.io/ticketz-oss/ticketz-backend:latest
    volumes:
      - backend_public:/usr/src/app/public
      - backend_private:/usr/src/app/private
    env_file:
      - .env-backend
    restart: always
    depends_on:
      - acme-companion
      - postgres
      - redis
    networks:
      - ticketz
      - nginx-proxy

  frontend:
    image: ghcr.io/ticketz-oss/ticketz-frontend:latest
    env_file:
      - .env-frontend
    restart: always
    depends_on:
      - acme-companion
      - backend
    networks:
      - ticketz
      - nginx-proxy

  postgres:
    image: postgres:16-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-ticketz}
      - POSTGRES_DB=${POSTGRES_DB:-ticketz}
      - POSTGRES_HOST_AUTH_METHOD=trust
      - TZ=${TZ:-America/Sao_Paulo}
    expose:
      - 5432
    restart: always
    networks:
      - ticketz

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    expose:
      - 6379
    restart: always
    volumes:
      - redis_data:/data
    networks:
      - ticketz

  wordpress:
    image: wordpress
    restart: always
    environment:
      WORDPRESS_DB_HOST: mysqldb
      WORDPRESS_DB_USER: exampleuser
      WORDPRESS_DB_PASSWORD: examplepass
      WORDPRESS_DB_NAME: exampledb
      VIRTUAL_HOST: site.exemplo.com.br
      VIRTUAL_PORT: 80
      LETSENCRYPT_HOST: site.exemplo.com.br
      LETSENCRYPT_EMAIL: email@exemplo.com.br
    volumes:
      - wordpress:/var/www/html
    networks:
      - wordpress
      - nginx-proxy

  mysqldb:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_DATABASE: exampledb
      MYSQL_USER: exampleuser
      MYSQL_PASSWORD: examplepass
      MYSQL_RANDOM_ROOT_PASSWORD: '1'
    volumes:
      - db:/var/lib/mysql
    network:
      - wordpress
