version: '3'

services:

  traefik:
    image: "traefik:v2.10"
    container_name: "traefik"
    restart: always
    command:
      #- "--log.level=DEBUG"
      - "--api"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=true"
      - "--entrypoints.web.address=:80"

      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=${TRAEFIK_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"

    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"
    env_file:
      - .env-traefik

  backend:
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    volumes:
      - backend_public:/usr/src/app/public
      - backend_private:/usr/src/app/private
    env_file:
      - .env-backend-traefik
      - .env-traefik

    restart: always
    
    labels:

      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`${BACKEND_TRAEFIK}`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=myresolver"

    depends_on:
      - postgres
      - redis
    ports:
      - ${BACKEND_PORT:-8080}:3000
 

  frontend:
    ports:
      - ${FRONTEND_PORT:-3000}:80
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    env_file:
      - .env-frontend-traefik
      - .env-traefik
    restart: always

    labels:

      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`${FRONTEND_TRAEFIK}`)"

      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
    depends_on:
      - backend


  postgres:
    image: postgres:16-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-ticketz}
      - POSTGRES_DB=${POSTGRES_DB:-ticketz}
      - POSTGRES_HOST_AUTH_METHOD=trust
      - TZ=${TZ:-America/Sao_Paulo}
    expose:
      - 5432
    restart: always


  redis:
    image: redis:alpine
    command: redis-server --appendonly yes
    expose:
      - 6379
    restart: always
    volumes:
      - redis_data:/data
    


networks:
  default:
   external:
    name: ticketz

    
volumes:
  postgres_data:
  redis_data:
  backend_public:
  backend_private: